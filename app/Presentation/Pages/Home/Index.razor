@page "/dashboard"

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IDashboardService DashboardService

<MudContainer Class="mt-5">
    
    <!-- 1. TITRE -->
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-6">
        📊 Dashboard
    </MudText>

    <MudGrid Spacing="3">

        <!-- 2. MATCHS FULL-WIDTH -->
        <MudItem xs="12">
            <MudPaper Elevation="2" Class="p-4 rounded-lg shadow-lg">
                <MudText Typo="Typo.h6" Class="mb-2">💘 Mes matchs</MudText>

                @if (Matches.Any())
                {
                    <!-- grid interne pour les cartes users -->
                    <MudGrid GutterSize="3">
                        @foreach (var user in Matches)
                        {
                            <!-- chaque user-card -->
                            <MudItem xs="12">
                                <MudPaper Elevation="1" Class="d-flex align-center  p-3 rounded">
                                    <!-- avatar -->
                                    <MudAvatar class="m-4"  Style="height:50px; width:50px;">
                                        <img src="@user.Photo"style="object-fit: contain; width: 100%; height: 100%;" />
                                    </MudAvatar>

                                    <!-- nom -->
                                    <MudText Typo="Typo.subtitle1" Class="mr-auto m-4">
                                        @user.Username
                                    </MudText>

                                    <!-- actions -->
                                    <MudButtonGroup>
                                        <MudButton Color="Color.Primary" Variant="Variant.Filled" Href="@($"/chat/{user.Id}")">
                                            💬
                                        </MudButton>
                                        <MudButton Color="Color.Secondary" Variant="Variant.Outlined" Href="@($"/profile/{user.Id}")">
                                            👤
                                        </MudButton>
                                    </MudButtonGroup>
                                </MudPaper>
                            </MudItem>
                        }
                    </MudGrid>
                }
                else
                {
                    <MudText>Pas encore de match.</MudText>
                }
            </MudPaper>
        </MudItem>

        <!-- 3. CONVERSATIONS (2 PAR 2) -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4 rounded-lg shadow-sm d-flex flex-column">
                <MudText Typo="Typo.h6" Class="mb-2">💬 Conversations en cours</MudText>

                @if (Conversations.Any())
                {
                    @foreach (var conv in Conversations)
                    {
                       <MudPaper Elevation="1" Class="d-flex align-center  p-3 rounded m-4">  
                            <MudAvatar class="mr-4" Style="height:50px; width:50px;">
                                <img src="@conv.Photo"style="object-fit: contain; width: 100%; height: 100%;" />
                            </MudAvatar>
                            <MudText Typo="Typo.subtitle2" Class="mr-auto m-4">
                                @conv.Username
                            </MudText>
                            <MudButtonGroup>
                                <MudButton Color="Color.Primary" Variant="Variant.Filled" Href="@($"/chat/{conv.UserId}")">
                                    💬
                                </MudButton>
                                <MudButton Color="Color.Secondary" Variant="Variant.Outlined" Href="@($"/profile/{conv.UserId}")">
                                    👤
                                </MudButton>
                            </MudButtonGroup>
                        </MudPaper>
                    }
                }
                else
                {
                    <MudText>Pas encore de conversation.</MudText>
                }
            </MudPaper>
        </MudItem>

        <!-- 4. NOTIFICATIONS (2 PAR 2) -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4 rounded-lg shadow-sm">
                <MudText Typo="Typo.h6" Class="mb-2">🔔 Notifications</MudText>
                <div class="d-flex justify-space-between">
                    <MudText Typo="Typo.body1">Likes reçus : @NotificationCounts.Likes</MudText>
                    <MudText Typo="Typo.body1">Messages non lus : @NotificationCounts.Messages</MudText>
                </div>
            </MudPaper>
        </MudItem>

        <!-- 5. PROFILS VISITÉS (2 PAR 2) -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4 rounded-lg shadow-sm">
                <MudText Typo="Typo.h6" Class="mb-2">👀 Profils visités</MudText>
                <div class="d-flex flex-wrap">
                    @foreach (var visit in VisitedProfiles)
                    {
                        <MudChip Class="mr-2 mb-2" OnClick="@(() => GoToProfile(visit.Id))">
                            @visit.Username
                        </MudChip>
                    }
                </div>
            </MudPaper>
        </MudItem>

        <!-- 6. PROFILS QUI M'ONT VISITÉ (2 PAR 2) -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4 rounded-lg shadow-sm">
                <MudText Typo="Typo.h6" Class="mb-2">🕵️‍♀️ Qui m’ont visité</MudText>
                <div class="d-flex flex-wrap">
                    @foreach (var visitor in ProfileVisitors)
                    {
                        <MudChip Class="mr-2 mb-2" OnClick="@(() => GoToProfile(visitor.Id))">
                            @visitor.Username
                        </MudChip>
                    }
                </div>
            </MudPaper>
        </MudItem>

    </MudGrid>
</MudContainer>

@code {
    private List<UserDto> Matches = new();
    private List<ConversationDto> Conversations = new();
    private NotificationStats NotificationCounts = new();
    private List<UserDto> VisitedProfiles = new();
    private List<UserDto> ProfileVisitors = new();
    private int CurrentUserId;
    private bool isAuthenticated;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
        var user = authState.User;

        var userIdClaim = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
        if (userIdClaim != null && int.TryParse(userIdClaim.Value, out int userId))
        {
            CurrentUserId = userId;
        }

        Matches = await DashboardService.GetMatchesAsync(CurrentUserId);
        Conversations = await DashboardService.GetConversationsAsync(CurrentUserId);
        NotificationCounts = await DashboardService.GetNotificationStatsAsync(CurrentUserId);
        VisitedProfiles = await DashboardService.GetVisitedProfilesAsync(CurrentUserId);
        ProfileVisitors = await DashboardService.GetProfileVisitorsAsync(CurrentUserId);
    }

    private void GoToProfile(int userId)
    {
        NavigationManager.NavigateTo($"/profile/{userId}");
    }
}