@page "/dashboard"

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IDashboardService DashboardService

<MudContainer Class="mt-5">
    <MudGrid Spacing="3">
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4">
                <MudText Typo="Typo.h6">💘 Mes matchs</MudText>
                @if (Matches.Any())
                {
                    <MudGrid>
                        @foreach (var user in Matches)
                        {
                            <MudItem xs="12" sm="6" md="4" lg="3">
                                        <!-- Photo -->
                                        <MudAvatar Style="height:50px; width:50px;">
                                            <img src="@user.Photo"style="object-fit: contain; width: 100%; height: 100%;" />
                                        </MudAvatar>

                                        <!-- Nom + boutons -->
                                        <div style="display: flex; flex-direction: column; flex-grow: 1;">
                                            <MudText Typo="Typo.h6">@user.Username</MudText>

                                            <MudButtonGroup Class="mt-1" FullWidth="false">
                                                <MudButton Color="Color.Primary" Variant="Variant.Filled" Href="@($"/chat/{user.Id}")">
                                                    💬 Chat
                                                </MudButton>
                                                <MudButton Color="Color.Secondary" Variant="Variant.Outlined" Href="@($"/profile/{user.Id}")">
                                                    👤 Profil
                                                </MudButton>
                                            </MudButtonGroup>
                                        </div>
                            </MudItem>
                        }                      
                    </MudGrid>
                }
                else
                {
                    <MudText>Pas encore de match.</MudText>
                }
            </MudPaper>
        </MudItem>

        <!-- Conversations -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4">
                <MudText Typo="Typo.h6">💬 Conversations en cours</MudText>
                @if (Conversations.Any())
                {
                    @foreach (var conv in Conversations)
                    {
                        <MudListItem T="string">
                            <MudAvatar Style="height:50px; width:50px;">
                                <img src="@conv.Photo" style="object-fit: contain; width: 100%; height: 100%;" />
                            </MudAvatar>
                            <MudText>@conv.Username</MudText>
                            <MudText Class="ml-auto text-muted" Typo="Typo.caption">@conv.LastMessage</MudText>
                        </MudListItem>
                    }
                }
                else
                {
                    <MudText>Pas encore de conversation.</MudText>
                }
            </MudPaper>
        </MudItem>

        <!-- Notifications -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4">
                <MudText Typo="Typo.h6">🔔 Notifications</MudText>
                <MudList T="string">
                    <MudListItem>Likes reçus : @NotificationCounts.Likes</MudListItem>
                    <MudListItem>Messages non lus : @NotificationCounts.Messages</MudListItem>
                </MudList>
            </MudPaper>
        </MudItem>

        <!-- Visites faites -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4">
                <MudText Typo="Typo.h6">👀 Profils visités</MudText>
                @foreach (var visit in VisitedProfiles)
                {
                    <MudChip T="string" OnClick="@(() => GoToProfile(visit.Id))">@visit.Username</MudChip>
                }
            </MudPaper>
        </MudItem>

        <!-- Visites reçues -->
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="p-4">
                <MudText Typo="Typo.h6">🕵️‍♀️ Profils qui m’ont visité</MudText>
                @foreach (var visitor in ProfileVisitors)
                {
                    <MudChip T="string" OnClick="@(() => GoToProfile(visitor.Id))">@visitor.Username</MudChip>
                }
            </MudPaper>
        </MudItem>

    </MudGrid>
</MudContainer>

@code {
    private List<UserDto> Matches = new();
    private List<ConversationDto> Conversations = new();
    private NotificationStats NotificationCounts = new();
    private List<UserDto> VisitedProfiles = new();
    private List<UserDto> ProfileVisitors = new();
    private int CurrentUserId;
    private bool isAuthenticated;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
        var user = authState.User;

        var userIdClaim = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
        if (userIdClaim != null && int.TryParse(userIdClaim.Value, out int userId))
        {
            CurrentUserId = userId;
        }

        Matches = await DashboardService.GetMatchesAsync(CurrentUserId);
        Conversations = await DashboardService.GetConversationsAsync(CurrentUserId);
        NotificationCounts = await DashboardService.GetNotificationStatsAsync(CurrentUserId);
        VisitedProfiles = await DashboardService.GetVisitedProfilesAsync(CurrentUserId);
        ProfileVisitors = await DashboardService.GetProfileVisitorsAsync(CurrentUserId);
    }

    private void GoToProfile(int userId)
    {
        NavigationManager.NavigateTo($"/profile/{userId}");
    }
}