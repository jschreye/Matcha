@page "/"
@namespace Presentation.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Components.Web

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="Presentation.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <title>Matcha</title>
    <script>
        // Scroll vers le bas de l'élément de chat
        window.scrollToBottom = function(element) {
            if (element) {
                element.scrollTop = element.scrollHeight;
            }
        };
        
        // Autres fonctions JS existantes
        window.resizeListeners = [];
        window.addResizeListener = function(dotNetHelper) {
            const resizeHandler = () => {
                const width = window.innerWidth;
                let breakpoint = "Xl";
                if (width < 600) breakpoint = "Xs";
                else if (width < 960) breakpoint = "Sm";
                else if (width < 1280) breakpoint = "Md";
                else if (width < 1920) breakpoint = "Lg";
                
                dotNetHelper.invokeMethodAsync('OnResize', breakpoint);
            };
            
            window.resizeListeners.push(resizeHandler);
            window.addEventListener('resize', resizeHandler);
            resizeHandler();
        };
        
        window.removeResizeListener = function() {
            window.resizeListeners.forEach(function(listener) {
                window.removeEventListener('resize', listener);
            });
            window.resizeListeners = [];
        };
    </script>
    <script src="js/localization.js"></script>
</head>
<body>
    <CascadingAuthenticationState>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </CascadingAuthenticationState>
    
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            Une erreur s'est produite. Cette application peut ne plus répondre jusqu'à ce qu'elle soit rechargée.
        </environment>
        <environment include="Development">
            Une exception non gérée s'est produite. Voir les outils de développement du navigateur pour plus de détails.
        </environment>
        <a href="" class="reload">Recharger</a>
        <a class="dismiss">🗙</a>
    </div>
    
    <script src="js/auth.js"></script>
    <script src="js/chat.js"></script>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
</body>
</html>