@page "/login"
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject IAlertService AlertService
@using Core.Data.DTOs
@using System.ComponentModel.DataAnnotations

<MudText Typo="Typo.h3">Connexion</MudText>

<MudForm @ref="form" @bind-IsValid="@isFormValid" Outlined="true">
    <!-- Nom d'utilisateur -->
    <MudTextField T="string" Label="Nom d'utilisateur" Variant="Variant.Outlined" Required="true"
                  RequiredError="Le nom d'utilisateur est requis" @bind-Value="loginDto.Username"/>
    
    <!-- Mot de passe -->
    <MudTextField T="string" Label="Mot de passe" Variant="Variant.Outlined" InputType="InputType.Password"
                  Required="true" RequiredError="Le mot de passe est requis" @bind-Value="loginDto.Password" />

    <!-- Boutons -->
    <div class="d-flex justify-content-between align-items-center">
        <!-- Boutons de validation -->
        <div>
            <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="GoToRequestReset">Mot de passe oublié ?</MudButton>
        </div>

        <!-- Bouton de connexion -->
        <div>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(!isFormValid)" OnClick="HandleLogin">
                Se connecter
            </MudButton>
        </div>
    </div>
</MudForm>

@code {
    private LoginDto loginDto = new LoginDto();
    private MudForm? form;
    private string message = string.Empty;
    private bool isFormValid;
    private bool operationSuccess;

    private async Task HandleLogin()
    {
        // Utilisez directement la variable de classe 'operationSuccess'
        operationSuccess = await JS.InvokeAsync<bool>("login", loginDto.Username, loginDto.Password);
        if (operationSuccess)
        {
            AlertService.ShowMessage("Connexion réussie !", true);
            Navigation.NavigateTo("/profile", true);
        }
        else
        {
            AlertService.ShowMessage("Nom d'utilisateur ou mot de passe incorrect.", false);
        }
    }

    private void GoToRequestReset()
    {
        Navigation.NavigateTo("/request-reset");
    }
}