@page "/login"
@inject IJSRuntime JS
@inject NavigationManager Navigation
@using Core.Data.DTOs
@using System.ComponentModel.DataAnnotations

<MudText Typo="Typo.h3">Connexion</MudText>

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors" Outlined="true">
    <!-- Nom d'utilisateur -->
    <MudTextField T="string" Label="Nom d'utilisateur" Variant="Variant.Outlined" Required="true"
                  RequiredError="Le nom d'utilisateur est requis" @bind-Value="loginDto.Username" />
    
    <!-- Mot de passe -->
    <MudTextField T="string" Label="Mot de passe" Variant="Variant.Outlined" InputType="InputType.Password"
                  Required="true" RequiredError="Le mot de passe est requis" @bind-Value="loginDto.Password" />

    <!-- Boutons -->
    <div class="d-flex justify-content-between align-items-center">
        <!-- Boutons de validation -->
        <div>
            <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="GoToRequestReset">Mot de passe oublié ?</MudButton>
        </div>

        <!-- Bouton de connexion -->
        <div>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(!success)" Type="submit" OnClick="HandleLogin">
                Se connecter
            </MudButton>
        </div>
    </div>
</MudForm>


@if (!string.IsNullOrEmpty(message))
{
    <MudAlert Severity="@(success ? Severity.Success : Severity.Error)" Elevation="2">
        @message
    </MudAlert>
}

@code {
    private LoginDto loginDto = new LoginDto();
    private MudForm form;
    private string message = string.Empty;
    private bool success;
    private string[] errors = { };
    
    private async Task HandleLogin()
    {
        bool success = await JS.InvokeAsync<bool>("login", loginDto.Username, loginDto.Password);
        if (success)
        {
            success = true;
            message = "Connexion réussie !";
            Navigation.NavigateTo("/", true);
        }
        else
        {
            success = false;
            message = "Nom d'utilisateur ou mot de passe incorrect.";
       }
    }

    private void GoToRequestReset()
    {
        Navigation.NavigateTo("/request-reset");
    }
}