@page "/login"
@inject IJSRuntime JS
@inject NavigationManager Navigation
@using Core.Data.DTOs

<MudText Typo="Typo.h3">Connexion</MudText>

<EditForm Model="@loginDto" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <MudCard Outlined="true" Class=" border-solid mud-border-primary pa-4">
        <MudCardContent>
            <MudTextField Label="Nom d'utilisateur :" Variant="Variant.Outlined"
                        @bind-Value="loginDto.Username" For="@(() => loginDto.Username)"/>
            <MudTextField Label="Mot de passe :" Class="mt-3" Variant="Variant.Outlined"
                        @bind-Value="loginDto.Password" For="@(() => loginDto.Password)" InputType="InputType.Password"/>
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Class="ml-auto">Se connecter</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>
<MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="GoToRequestReset">Mot de passe oubli√© ?</MudButton>

@code {
    private LoginDto loginDto = new LoginDto();

    private async Task HandleLogin()
    {
        bool success = await JS.InvokeAsync<bool>("login", loginDto.Username, loginDto.Password);
        if (success)
        {
            Navigation.NavigateTo("/", true);
        }
        else
        {
            Console.WriteLine("Identifiants incorrects.");
        }
    }

    private void GoToRequestReset()
    {
        Navigation.NavigateTo("/request-reset");
    }
}