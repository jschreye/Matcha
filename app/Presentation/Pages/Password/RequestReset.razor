@page "/request-reset"
@inject HttpClient Http
@inject IAlertService AlertService

<MudText Typo="Typo.h3">Réinitialiser le mot de passe</MudText>

<MudForm @ref="form" @bind="isFormValid" outlined="true">
    <!-- Email -->
    <MudTextField T="string" Label="Email" Variant="Variant.Outlined" Required="true"
                  RequiredError="L'email est requis" Validation="@(new EmailAddressAttribute())" 
                  @bind="email" />

    <!-- Boutons -->
    <div class="d-flex justify-content-end">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(!isFormValid)" OnClick="SendResetEmail">
            Envoyer
        </MudButton>
    </div>
</MudForm>


@code {
    private string email;
    private bool isFormValid;
    private MudForm form;

    protected override void OnInitialized()
    {
        // Définir l'adresse de base selon votre configuration
        Http.BaseAddress = new Uri("http://localhost:5000/");
    }

    private async Task SendResetEmail()
    {
        if (!isFormValid)
        {
            AlertService.ShowMessage("Veuillez remplir correctement le formulaire.", false);
            return;
        }

        var content = new FormUrlEncodedContent(new[]
        {
            new KeyValuePair<string, string>("email", email)
        });

        try
        {
            var response = await Http.PostAsync("auth/request-password-reset", content);
            if (response.IsSuccessStatusCode)
            {
                AlertService.ShowMessage("Email de réinitialisation envoyé. Veuillez vérifier votre boîte de réception.", true);
            }
            else
            {
                var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                AlertService.ShowMessage($"Erreur : {errorResponse?.Message}", false);
            }
        }
        catch (Exception ex)
        {
            AlertService.ShowMessage($"Une erreur s'est produite : {ex.Message}", false);
        }
    }

    private class ErrorResponse
    {
        public string? Message { get; set; }
    }
}