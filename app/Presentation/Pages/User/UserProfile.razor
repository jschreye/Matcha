@page "/profile/{UserId:int}"
@using Core.Data.DTOs
@using Core.Data.Entity
@using Core.Interfaces.Services
@inject IUserService UserService
@inject IPhotoService PhotoService
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    @if (_loading)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else if (_userProfile == null)
    {
        <MudAlert Severity="Severity.Error">Utilisateur non trouvé.</MudAlert>
    }
    else
    {
        <MudPaper Elevation="3" Class="pa-4">
            <MudGrid>
                <MudItem xs="12" Class="d-flex justify-center mb-4">
                    @if (!string.IsNullOrEmpty(_profilePhotoUrl))
                    {
                        <MudAvatar Style="height: 150px; width: 150px; margin-bottom: 16px;">
                            <img src="@_profilePhotoUrl" alt="@_userProfile.Username" style="object-fit: contain; width: 100%; height: 100%;" />
                        </MudAvatar>
                    }
                    else
                    {
                        <MudAvatar Style="height: 150px; width: 150px; margin-bottom: 16px;" Color="Color.Primary">
                            <MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Large" />
                        </MudAvatar>
                    }
                </MudItem>
                
                <MudItem xs="12">
                    <MudText Typo="Typo.h4" Class="mb-4 text-center">Profil de @_userProfile.Username</MudText>
                </MudItem>
            </MudGrid>
            
            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudCard>
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Informations personnelles</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudField Label="Prénom" Variant="Variant.Outlined">@_userProfile.Firstname</MudField>
                            <MudField Label="Nom" Variant="Variant.Outlined">@_userProfile.Lastname</MudField>
                            <MudField Label="Âge" Variant="Variant.Outlined">@_userProfile.Age</MudField>
                            <MudField Label="Email" Variant="Variant.Outlined">@_userProfile.Email</MudField>
                            <MudDivider Class="my-4" />
                            <MudField Label="Genre" Variant="Variant.Outlined">@GetGenreDescription(_userProfile.Genre)</MudField>
                            <MudField Label="Préférences" Variant="Variant.Outlined">@GetPreferenceDescription(_userProfile.SexualPreferences)</MudField>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudCard>
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Biographie</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText>@(_userProfile.Biography ?? "Aucune biographie disponible")</MudText>
                        </MudCardContent>
                    </MudCard>
                    
                    <MudCard Class="mt-4">
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Statistiques</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudField Label="Score de popularité" Variant="Variant.Outlined">@_userProfile.PopularityScore</MudField>
                            <MudField Label="Profil complété" Variant="Variant.Outlined">@(_userProfile.ProfileComplete ? "Oui" : "Non")</MudField>
                            <MudField Label="Localisation active" Variant="Variant.Outlined">@(_userProfile.LocalisationIsActive ? "Oui" : "Non")</MudField>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudPaper>
    }
</MudContainer>

@code {
    [Parameter]
    public int UserId { get; set; }
    
    private UserProfileDto? _userProfile;
    private string _profilePhotoUrl = string.Empty;
    private bool _loading = true;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadUserProfile();
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await LoadUserProfile();
    }
    
    private async Task LoadUserProfile()
    {
        _loading = true;
        try
        {
            _userProfile = await UserService.GetUserProfileAsync(UserId);
            if (_userProfile != null)
            {
                await LoadProfilePhoto();
            }
        }
        catch (Exception ex)
        {
            // Gérer l'erreur ici
            Console.WriteLine($"Erreur lors du chargement du profil: {ex.Message}");
        }
        finally
        {
            _loading = false;
        }
    }
    
    private async Task LoadProfilePhoto()
    {
        try
        {
            var photo = await PhotoService.GetProfilePhotoAsync(UserId);
            if (photo != null && photo.ImageData != null && photo.ImageData.Length > 0)
            {
                var base64 = Convert.ToBase64String(photo.ImageData);
                _profilePhotoUrl = $"data:image/jpeg;base64,{base64}";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors du chargement de la photo: {ex.Message}");
            _profilePhotoUrl = string.Empty;
        }
    }
    
    private string GetGenreDescription(int? genreId)
    {
        return genreId switch
        {
            1 => "Homme",
            2 => "Femme",
            3 => "Non-binaire",
            _ => "Non spécifié"
        };
    }
    
    private string GetPreferenceDescription(int? preferenceId)
    {
        return preferenceId switch
        {
            1 => "Hétérosexuel",
            2 => "Homosexuel",
            3 => "Bisexuel",
            _ => "Non spécifié"
        };
    }
} 