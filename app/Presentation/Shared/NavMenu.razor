@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Matcha</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <NavLink class="nav-link" href="/">Home</NavLink>
        <NavLink class="nav-link" href="/login">Login</NavLink>
        <NavLink class="nav-link" href="/register">Register</NavLink>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    ✅ Connecté en tant que : @username
                    <button class="nav-link btn btn-link" @onclick='() => Navigation.NavigateTo("/logout", true)'>
                        Se déconnecter
                    </button>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3 text-danger">
                    ❌ Non connecté
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string username = string.Empty;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        username = authState.User.Identity?.Name ?? "Inconnu";
    }

    private async Task Logout()
    {
        // Cette méthode n'est plus utilisée avec la nouvelle approche de navigation vers "/logout"
        // Si nécessaire, vous pouvez la supprimer ou la laisser en réserve.
    }
}