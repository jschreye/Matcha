@using Core.Interfaces.Services
@inject IUserService UserService
@inject IAlertService AlertService
@inject AuthenticationStateProvider AuthStateProvider

<MudText Typo="Typo.h5" Class="mt-10 mb-4">Sécurité</MudText>
<MudTextField T="string" Label="Mot de passe actuel" Variant="Variant.Outlined" 
            InputType="InputType.Password" @bind-Value="CurrentPassword" />
<MudTextField T="string" Label="Nouveau mot de passe" Variant="Variant.Outlined" 
            InputType="InputType.Password" @bind-Value="NewPassword" />
<MudTextField T="string" Label="Confirmer le nouveau mot de passe" Variant="Variant.Outlined" 
            InputType="InputType.Password" @bind-Value="ConfirmNewPassword" />
<div class="d-flex justify-content-end mt-4">
    <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="UpdatePassword">
        Modifier le mot de passe
    </MudButton>
</div>

@code {
    [Parameter]
    public int UserId { get; set; }

    private string CurrentPassword { get; set; } = string.Empty;
    private string NewPassword { get; set; } = string.Empty;
    private string ConfirmNewPassword { get; set; } = string.Empty;

    /** 
    * Fonction pour mettre à jour le mot de passe.
    * Vérifie que la confirmation est correcte, valide le mot de passe actuel 
    * et appelle la méthode dédiée du service.
    */
    private async Task UpdatePassword()
    {
        if (NewPassword != ConfirmNewPassword)
        {
            AlertService.ShowMessage("La confirmation ne correspond pas.", false);
            return;
        }

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity == null || !user.Identity.IsAuthenticated)
        {
            AlertService.ShowMessage("Utilisateur non authentifié.", false);
            return;
        }

        // Vérifie le mot de passe actuel via le service
        bool isValid = await UserService.ValidateUser(user.Identity.Name ?? string.Empty, CurrentPassword);
        if (!isValid)
        {
            AlertService.ShowMessage("Mot de passe actuel incorrect.", false);
            return;
        }

        // Appelle la méthode dédiée pour mettre à jour le mot de passe
        bool result = await UserService.UpdatePasswordAsync(UserId, NewPassword);
        if (result)
        {
            AlertService.ShowMessage("Mot de passe mis à jour avec succès.", true);
            CurrentPassword = NewPassword = ConfirmNewPassword = "";
        }
        else
        {
            AlertService.ShowMessage("Erreur lors de la mise à jour du mot de passe.", false);
        }
    }
} 