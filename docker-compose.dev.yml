services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=${DB_NAME};User=${DB_USER};Password=${DB_PASSWORD};
      - SmtpSettings__Host=${SMTP_HOST}
      - SmtpSettings__Port=${SMTP_PORT}
      - SmtpSettings__EnableSsl=${SMTP_ENABLESSL}
      - SmtpSettings__UserName=${SMTP_USERNAME}
      - SmtpSettings__Password=${SMTP_PASSWORD}
      - SmtpSettings__FromEmail=${SMTP_FROMEMAIL}
      - SmtpSettings__FromName=${SMTP_FROMNAME}
    volumes:
      - ./app:/app:cached
      - data_protection_keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      - db
    networks:
      - app-network
    ports:
      - "5001:5001"  # Exposer le port 5000 directement

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  caddy:
    image: caddy:2
    container_name: caddy_server
    restart: unless-stopped
    depends_on:
      - app 
    ports:
      - "${CADDY_HTTP_PORT:-80}:80"
      - "${CADDY_HTTPS_PORT:-443}:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
      
  mailpit:
    image: axllent/mailpit
    container_name: mailpit_matcha
    ports:
      - "1025:1025"  # Port SMTP
      - "8025:8025"  # Interface web
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mysql_data:
  caddy_data:
  caddy_config:
  data_protection_keys:

networks:
  app-network:
    driver: bridge